{"version":3,"sources":["Report.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MEASUREMENT_ID","firestore","auth","Report","useState","useForm","register","handleSubmit","showForm","setShowForm","records","setRecords","editMode","setEditMode","id","name","number","arrivalTime","Date","departureTime","reason","createdAt","tempData","setTempData","parkingRef","collection","query","orderBy","limitToLast","useCollectionData","idField","data","console","log","useEffect","r","map","d","i","ReportRow","onDeleteClick","handleDeleteClick","onEditClick","handleEditClick","handleCloseForm","onSubmit","a","preparedData","parseFloat","doc","set","then","catch","error","alert","add","window","confirm","delete","toDate","Container","Row","Col","Button","variant","onClick","Table","striped","bordered","hover","Modal","show","onHide","aria-labelledby","centered","type","placeholder","ref","required","defaultValue","Header","closeButton","Title","Body","htmlFor","step","min","format","Footer","props","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc834e2.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Select from 'react-select'\nimport { format } from 'date-fns'\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\nimport { useForm } from \"react-hook-form\"\n\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport setISODay from 'date-fns/setISODay'\n\nif (firebase.apps.length === 0) {\n    firebase.initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n    })\n  }\n\n  const firestore = firebase.firestore()\n  const auth = firebase.auth()\n\n  export default function Report() {\n    const [category, setCategory] = useState()\n    const { register, handleSubmit } = useForm()\n    const [showForm, setShowForm] = useState(false)\n    const [records, setRecords] = useState([])\n    const [total, setTotal] = useState(0)\n    const [editMode, setEditMode] = useState(false)\n    const [tempData, setTempData] = useState({\n      id: null,\n      name: '',\n      number: null,\n      arrivalTime: new Date(),\n      departureTime: new Date(),\n      reason: '',\n      createdAt: new Date(),\n    })\n\n    const parkingRef = firestore.collection('parkingLot');\n    const query = parkingRef.orderBy('createdAt', 'asc').limitToLast(100);\n    const [data] = useCollectionData(query, { idField: 'id' }); \n    \n    console.log(\"REACT_APP_PROJECT_ID\", process.env.REACT_APP_PROJECT_ID)\n\n    useEffect(() => {\n        if (data) { // Guard condition\n          let t = 0\n          let r = data.map((d, i) => {\n            // console.log('useEffect', format(d.createdAt.toDate(), \"yyyy-MM-dd\"))\n           \n            return (\n              <ReportRow\n                data={d}\n                i={i}\n                onDeleteClick={handleDeleteClick}\n                onEditClick={handleEditClick}\n              />\n            )\n          })\n    \n          setRecords(r)\n          \n        }\n      },\n        [data])\n\n        const handleshowForm = () => setShowForm(true)\n\n        // Handlers for Modal Add Form\n        const handleCloseForm = () => {\n          setTempData({\n            id: null,\n            name: '',\n            number: 0,\n            arrivalTime: new Date(),\n            departureTime: new Date(),\n            reason: '',\n            createdAt: new Date(),\n            \n          })\n          setShowForm(false)\n          setEditMode(false)\n        }\n\n        const onSubmit = async (data) => {\n            let preparedData = {\n              // ...data,\n              name: data.name,\n              number: parseFloat(data.number),\n              arrivalTime: new Date(data.arrivalTime),\n              departureTime: new Date(data.departureTime),\n              reason: data.reason,\n              createdAt: new Date(data.createdAt),\n            }\n            console.log('onSubmit', preparedData)\n\n            if (editMode) {\n                // Update record\n                console.log(\"UPDATING!!!!\", data.id)\n                await parkingRef.doc(data.id)\n                  .set(preparedData)\n                  .then(() => console.log(\"parkingRef has been set\"))\n                  .catch((error) => {\n                    console.error(\"Error: \", error);\n                    alert(error)\n                  });\n              } else {\n                await parkingRef\n                  .add(preparedData)\n                  .then(() => console.log(\"New record has been added.\"))\n                  .catch((error) => {\n                    console.error(\"Errror:\", error)\n                    alert(error)\n                  })\n                // setShowForm(false)\n              }\n              handleCloseForm()\n            }\n\n            const handleDeleteClick = (id) => {\n                console.log('handleDeleteClick in Parking', id)\n                if (window.confirm(\"Are you sure to delete this record?\"))\n                  parkingRef.doc(id).delete()\n              }\n            \n              const handleEditClick = (data) => {\n                let preparedData = {\n                  id: data.id,\n                  name: data.name,\n                  number: parseFloat(data.number),\n                  arrivalTime: data.arrivalTime.toDate(),\n                  departureTime: data.departureTime.toDate(),\n                  reason: data.reason,\n                  createdAt: data.createdAt.toDate(),\n                }\n                console.log(\"handleEditClick\", preparedData)\n                // expect original data type for data.createdAt is Firebase's timestamp\n                // convert to JS Date object and put it to the same field\n                // if ('toDate' in data.createdAt) // guard, check wther toDate() is available in createdAt object.\n                //   data.createdAt = data.createdAt.toDate()\n            \n                setTempData(preparedData)\n                setShowForm(true)\n                setEditMode(true)\n              }\n\n              return (\n                <Container>\n                  <Row>\n                    <Col>\n                      <h1>Report</h1>\n                      <Button variant=\"outline-dark\" onClick={handleshowForm}>\n                        <BsPlus /> Request\n                  </Button>\n                    </Col>\n                  </Row>\n                \n                  <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Phone Number</th>\n            <th>Arrival Time</th>\n            <th>Departure Time</th>\n            <th>Reason</th>\n            <th>Created At</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {records}\n        </tbody>\n      </Table>\n\n      <Modal\n        show={showForm} onHide={handleCloseForm}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            type=\"hidden\"\n            placeholder=\"ID\"\n            ref={register({ required: false })}\n            name=\"id\"\n            id=\"id\"\n            defaultValue={tempData.id}\n          />\n          <Modal.Header closeButton>\n            <Modal.Title>\n              {editMode ? \"Edit Record\" : \"Add New Record\"}\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            \n          <Row>\n              <Col>\n                <label htmlFor=\"name\">Name</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  ref={register({ required: true })}\n                  name=\"name\"\n                  id=\"name\"\n                  defaultValue={tempData.name}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"number\">Number</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  min=\"0\"\n                  placeholder=\"Number\"\n                  ref={register({ required: true })}\n                  name=\"number\"\n                  id=\"number\"\n                  defaultValue={tempData.number}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"arrivalTime\">ArrivalTime</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"ArrivalTime\"\n                  ref={register({ required: true })}\n                  name=\"arrivalTime\"\n                  id=\"arrivalTime\"\n                  defaultValue={format(tempData.arrivalTime, \"yyyy-MM-dd\")}\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <label htmlFor=\"departureTime\">DepartureTime</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"DepartureTime\"\n                  ref={register({ required: true })}\n                  name=\"departureTime\"\n                  id=\"departureTime\"\n                  defaultValue={format(tempData.departureTime, \"yyyy-MM-dd\")}\n                />\n              </Col>\n            </Row> \n\n             <Row>\n              <Col>\n                <label htmlFor=\"reason\">Reason</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"text\"\n                  placeholder=\"Reason\"\n                  ref={register({ required: true })}\n                  name=\"reason\"\n                  id=\"reason\"\n                  defaultValue={tempData.reason}\n                />\n              </Col>\n            </Row>\n            \n            <Row>\n              <Col>\n                <label htmlFor=\"createdAt\">Date</label>\n              </Col>\n              <Col>\n                <input\n                  type=\"date\"\n                  placeholder=\"Date\"\n                  ref={register({ required: true })}\n                  name=\"createdAt\"\n                  id=\"createdAt\"\n                  defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\n                />\n              </Col>\n            </Row>   \n\n        </Modal.Body>\n        <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleCloseForm}>\n              Close\n          </Button>\n            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\n              {editMode ? \"Save Record\" : \"Add Record\"}\n            </Button>\n        </Modal.Footer>\n        </form>\n      </Modal>\n    </Container>\n  )\n}\n\nfunction ReportRow(props) {\n    let d = props.data\n    let i = props.i\n    return (\n      <tr>\n        <td></td>\n        <td>{d.name}</td>\n        <td>{d.number}</td>\n        <td>{format(d.arrivalTime.toDate(), \"yyyy-MM-dd\")}</td>\n        <td>{format(d.departureTime.toDate(), \"yyyy-MM-dd\")}</td>\n        <td>{d.reason}</td>\n        <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\n        <td><BsTrash onClick={() => props.onDeleteClick(d.id)} /></td>\n  \n      </tr>\n    )\n  }","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container,\n   Navbar, Nav, NavDropdown,\n } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Report from './Report'\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">Parking Report</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/report\">Report</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route path=\"/report\">\n          <Report />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}